{% extends 'demo.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('libs/leaflet/leaflet.css') }}" />
{% endblock %}

{% block headerscripts %}
    <script src="{{ asset('libs/leaflet/leaflet.js') }}"></script>
{% endblock %}

{% block body %}
<div class="one whole container centered white-bg padded bordered">
    <h3>Propriétés du chantier</h3>
    <div class="row">
        <div class="one half padded bordered">
            {{ form_start(edit_form) }}
            	
                {{ form_row(edit_form.nom) }}
                {{ form_row(edit_form.description) }}
                {{ form_row(edit_form.webcam) }}
                {{ form_row(edit_form.adresse) }}
                <div><label for="chantier_adresse_ville" class="required">Ville</label><input class="one whole" type="text" id="cp_ville" name="cp_ville" required="required" maxlength="128" value="{{ chantier.adresse.ville ~ ' (' ~ chantier.adresse.codePostal ~ ')' }}" /></div>
                <br>

                <div class="triple-gap-top gap-bottom gap-right">
                    <button class="round success pull-left" type="submit"><i class="icon-ok half-gap-right"></i>Valider</button>
                </div>                
            {{ form_end(edit_form) }}

            {{ form_start(delete_form) }}
                <div class="triple-gap-top gap-bottom">
                    <button class="gap-left round error" type="submit"><i class="icon-remove half-gap-right"></i>Supprimer</button>
                </div>                
            {{ form_end(delete_form) }}
        </div>

        <div class="one half pad-left pad-right">
            <p>En déplaçant l'icône sur la carte, vous mettez à jour les coordonnées géographiques du chantier.</p>
            <div class="noicon bordered one whole" id="map" style="height:400px;"></div>
            <div class="one whole double-padded">
                <a class="round button info" href="{{ path('chantier_show', { 'slug': chantier.slug }) }}" title="Retour à la page d'accueil du chantier"><i class="icon-reply"></i>&nbsp;&nbsp;Retour</a>
            </div>
            <script>
                var mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_token }}';
                var mapboxAttribution = 'Map data <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>';
                
                var outdoor = L.tileLayer(mapboxUrl, {id: 'mapbox.outdoors', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                    grayscale = L.tileLayer(mapboxUrl, {id: 'mapbox.light', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                    satellite = L.tileLayer(mapboxUrl, {id: 'mapbox.satellite', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                    streets   = L.tileLayer(mapboxUrl, {id: 'mapbox.streets', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19});

                var baseMaps = {
                    "courbes de niveau": outdoor,
                    "plan": streets,
                    "échelle de gris": grayscale,
                    "vue satellite": satellite
                };

                var craneIcon = L.icon({
                    iconUrl: "{{ asset('img/marker.png') }}",
                    shadowUrl: "{{ asset('img/shadow_marker.png') }}",

                    iconSize:     [32, 32], // size of the icon
                    shadowSize:   [32, 32], // size of the shadow
                    iconAnchor:   [16, 32], // point of the icon which will correspond to marker's location
                    shadowAnchor: [16, 32],  // the same for the shadow
                    popupAnchor:  [-8, -32] // point from which the popup should open relative to the iconAnchor
                });

                var map = L.map('map', {center: [{{ chantier.adresse.lat}}, {{ chantier.adresse.lon}}], zoom: 16, layers: [streets]});
            
                var marker = L.marker([{{ chantier.adresse.lat }}, {{ chantier.adresse.lon }}], {icon: craneIcon, draggable: true}).addTo(map);

                // mise à jour des coordonnées de l'adresse sur drag drop de l'icone sur la carte
                marker.on('dragend', function (e) {
                    $.ajax("{{ url('patch_chantier', { 'slug': chantier.slug }) }}", {
                        dataType : 'json',
                        data: {adresse:{lat: marker.getLatLng().lat, lon: marker.getLatLng().lng }},
                        type:"PATCH",

                        success: function(response) {
                            map.panTo(new L.LatLng(response.adresse.lat, response.adresse.lon));
                        },
                        error: function (response) {
                            alert('Erreur de mise à jour de la position');
                        }
                    });                            
                });

                L.control.scale().addTo(map);

                L.control.layers(baseMaps).addTo(map);
            </script>

        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
    var options = {
        url_list: '{{ path('search_ville') }}',
        url_get: '{{ path('get_ville') }}',
        otherOptions: {
            placeholder: "Choisissez la ville",
            minimumInputLength: 3,
            formatNoMatches: 'Aucune ville trouvée.',
            formatSearching: 'Recherche...',
            formatInputTooShort: 'Taper au moins 3 caractères...'
        }
    };
 
    $('#cp_ville').autocompleter(options); 

    {# $('.js-autocomplete').select2({
        ajax: {
            url: '{{ path('search_ville') }}',
            dataType: 'json',
            delay: 250
        },
        placeholder: "Choisissez la ville",
        minimumInputLength: 3,
        formatNoMatches: 'Aucune ville trouvée.',
        formatSearching: 'Recherche...',
        formatInputTooShort: 'Taper au moins 3 caractères...'            
    }); #}
  
</script>
{% endblock %}