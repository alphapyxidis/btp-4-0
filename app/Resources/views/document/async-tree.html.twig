

{% import 'tools.html.twig' as tools %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('libs/jstree/themes/default/style.min.css') }}" />
    <link rel="stylesheet" href="{{ asset('/css/dropzone.css') }}" />
{% endblock %}

{% block headerscripts %}
    <script type="text/javascript" src="{{ asset('libs/jstree/jstree.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('/js/dropzone.js') }}"></script>
{% endblock %}

                        <div class="ten twelfths centered">
                            <div class="one whole no-pad" Title="Glissez / déplacez ou cliquez pour télécharger des documents...">
                                <form id="btp40-dropzone" action="{{ oneup_uploader_endpoint('documents_chantier') }}" class="dropzone one whole info align-center half-padded" style="border:3px dashed; ">
                                </form>
                            </div>
                        </div>
                        <div class="ten twelfths skip-one half-gapped half-padded bordered white-bg active" style="overflow:auto;">
                            <div id="btp40-jstree"></div>
                        </div>


{% block javascripts %}
    <script>

        function create_folder(node) {
            var ref = $('#btp40-jstree').jstree(true);
            if(!node.length || ref.get_type(node)=="trash") { 
                par = "#";
            } else {
                if (ref.get_type(node)=="file") {
                    par = ref.get_parent(node);
                } else {
                    par = node;
                }
            }
            if (par == "#") { pos=1; } else { pos=0; }
            node = ref.create_node(par, {"type":"folder"}, pos);
            if(node) {
                ref.edit(node);
            }
        };

        function rename_node(node) {
            var ref = $('#btp40-jstree').jstree(true);
            if(!node.length) { return false; }
            node = node[0];
            ref.edit(node);
        };

        function delete_children(node) {
            var ref = $('#btp40-jstree').jstree(true), children, child, i;
            children = ref.get_node(node).children;
            if (ref.get_type(node) == "deleted") {
                while(children.length>0) {
                    child=children[0];
                    delete_children(child);
                    // delete permanently
                    ref.delete_node(child);
                }
            } else {
                for (i=0; i< children.length;i++) {
                    child= children[i];
                    delete_children(child);
                    // marked deleted (moved in recycling bin)
                    ref.set_type(child, "deleted");
                }
            }
        }

        function delete_node(node) {
            var ref = $('#btp40-jstree').jstree(true);
            if(!node.length) { return false; }
            delete_children(node);
            if (ref.get_type(node) == "deleted") {
                // delete permanently
                ref.delete_node(node);
            } else if (ref.get_type(node) != "trash") {
                // move to recycling bin
                trash = ref.get_node("trash");
                ref.set_type(node, "deleted");
                ref.move_node(node,trash,0);
            }
        };

        function restore_children(node) {
            var ref = $('#btp40-jstree').jstree(true), children, child, i, typ;
            children = ref.get_node(node).children;
            for (i = 0; i < children.length; i++) {
                child= children[i];
                restore_children(child);
                typ = child.toString().split("-");
                if (typ.length==1) {
                    typ[0]="folder";
                }
                ref.set_type(child, typ[0]);
            }
        }

        function restore_node(node) {
            var ref = $('#btp40-jstree').jstree(true), children, child, i, typ;
            if(!node.length) { return false; }
            if (ref.get_type(node) == "deleted" || ref.get_type(node) == "trash") {
                restore_children(node);
                if (ref.get_type(node) == "trash") {
                    children = ref.get_node(node).children;
                    while (children.length > 0) {
                        child = children[0];
                        ref.move_node(child,"#",1);
                    }
                } else {
                    typ = node.toString().split("-");
                    if (typ.length==1) {
                        typ[0]="folder";
                    }
                    ref.set_type(node, typ[0]);
                    ref.move_node(node,"#",1);
                }
            } else {
                return false;
            }
        };

        function customMenu(node)
        {
            var ref = $('#btp40-jstree').jstree(true),
                sel = ref.get_selected(),
                menu_items = {
                'create_folder' : {
                    'label' : 'Créer dossier',
                    'action' : function() {
                        create_folder(sel);
                    }
                },
                'create_subfolder' : {
                    'label' : 'Créer sous-dossier',
                    'action' : function() {
                        create_folder(sel);
                    }
                },                
                'rename' : {
                    'label' : 'Renommer',
                    'action' : function() {
                        rename_node(sel);
                    }
                },
                'restore' : {
                    'label' : 'Restaurer',
                    'action' : function() {
                        restore_node(sel);
                    }
                },
                'delete' : {
                    'label' : 'Supprimer',
                    'action' : function() {
                        delete_node(sel);
                    }
                },
                'empty_trash' : {
                    'label' : 'Vider la corbeille',
                    'action' : function() {
                        delete_node(sel);
                    }
                }
            }

           if (node.type === 'file') {
                delete menu_items.create_subfolder;
                delete menu_items.restore;
                delete menu_items.empty_trash;
            } else if (node.type === 'folder') {
                delete menu_items.create_folder;
                delete menu_items.restore;
                delete menu_items.empty_trash;
            } else if (node.type === 'deleted') {
                delete menu_items.create_folder;
                delete menu_items.create_subfolder;
                delete menu_items.rename;
                delete menu_items.empty_trash;
            } else if (node.type === 'trash') {
                delete menu_items.create_subfolder;
                delete menu_items.rename;
                delete menu_items.delete;
                if (node.children.length == 0) {
                    menu_items.restore._disabled = true;
                    menu_items.empty_trash._disabled = true;
                }
            }

            return menu_items;
        };

        $(function () { 

            Dropzone.options.btp40Dropzone = {
                params: {
                    // l'identifiant du chantier auquel est associé le document est passé en paramètre du formulaire
                    chantier: "{{ chantier.slug }}" 
                }, 
                init: function() {
                    this.on("sending", function(file, xhr, formData) {
                         // on ajoute dans le formulaire la date de modification du fichier original (UNIX epoch time)
                         formData.append("fileLastModified", file.lastModified);
                         formData.append("mimeType", file.type);
                    });
                },                
                maxFilesize: 5, // MB
                resizeHeight: 1280,
                acceptedFiles: 'image/jpeg, image/png, image/bmp, image/gif, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, application/x-pdf, application/vnd.ms-powerpoint, application/vnd.openxmlformats-officedocument.presentationml.presentation, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/x-7z-compressed, application/zip, application/x-zip-compressed, multipart/x-zip, audio/x-wav, audio/mpeg'
            };

            // init jsTree
            $.jstree.defaults.core.themes.variant = "large";
            $.jstree.defaults.dnd.copy = false;
            $('#btp40-jstree').jstree(
                { 
                    "types" : {
                        "default" : {
                            "type" : "folder"
                        },
                        "trash" : {                            
                        },
                        "deleted" : {
                            "valid_children" : []
                        },
                        "folder" : {
                            "icon" : "jstree-folder"
                        },                        
                        "file" : {
                            "valid_children" : [],
                            "icon" : "jstree-file"
                        }
                    },
                    "core": {
                        "animation" : 0,
                        "multiple" : false,
                        "force_text" : true,
                        "check_callback" : true,
                        "data": {
                            "url": function (node) {
                                api_url = "{{ url('get_documents_chantier', {'slug': chantier.slug}) }}";
                                return api_url;
                            },
                            "success": function (new_data) {
                                return new_data;
                            }
                        }
                    },
                    "plugins": [ "dnd", "state", "types", "contextmenu"],
                    "contextmenu": {items: customMenu},
                    "dnd" : {
                        "is_draggable" : function(node) {
                            if (node[0].type == 'trash') {
                                return false;
                            }
                            return true;
                        }
                    }
                }
            );

        });
    </script>
{% endblock %}