{# app/Resources/views/navigation/presentation.html.twig #}

{% extends './base.html.twig' %}

{% block stylesheets %}
            <link rel="stylesheet" href="{{ asset('libs/leaflet/leaflet.css') }}" />
            <link rel="stylesheet" href="{{ asset('libs/Leaflet.markercluster-1.4.1/dist/MarkerCluster.css') }}" />
            <link rel="stylesheet" href="{{ asset('libs/Leaflet.markercluster-1.4.1/dist/MarkerCluster.Default.css') }}" />
{% endblock %}
{% block headerscripts %}
            <script src="{{ asset('libs/leaflet/leaflet.js') }}"></script>
            <script src="{{ asset('libs/Leaflet.markercluster-1.4.1/dist/leaflet.markercluster.js') }}"></script>
{% endblock %}


{% block body %}
                <div class="two thirds padded">
                    <div class="noicon" id="map" style="width: 100%; height: 600px"></div>
                    <script>
                        var mapboxUrl = 'https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_token }}';
                        var mapboxAttribution = 'Map data <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>';
                        
                        var markers = L.markerClusterGroup();   

                        var outdoor = L.tileLayer(mapboxUrl, {id: 'mapbox.outdoors', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                            grayscale = L.tileLayer(mapboxUrl, {id: 'mapbox.light', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                            satellite = L.tileLayer(mapboxUrl, {id: 'mapbox.satellite', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19}),
                            streets   = L.tileLayer(mapboxUrl, {id: 'mapbox.streets', accessToken: '{{ mapbox_token }}', attribution: mapboxAttribution, maxZoom: 19});

                        var baseMaps = {
                            "courbes de niveau": outdoor,
                            "plan": streets,
                            "échelle de gris": grayscale,
                            "vue satellite": satellite
                        };

                        // dimensions of the image
                        var bounds1 = new L.LatLngBounds([48.702966, 1.36736], [48.712021, 1.380027]),
                            bounds2 = new L.LatLngBounds([48.707221, 1.371706], [48.709628, 1.376914]);

                        // add the image overlay, so that it covers the entire map
                        var pic = L.imageOverlay("{{ asset('ressources/vernouillet.png') }}", bounds1),
                            planmasse = L.imageOverlay("{{ asset('ressources/plan-de-masse.png') }}", bounds2);

                        var overlayMaps = {
                            "Plan Implantation Chantier": pic,
                            "Plan de Masse": planmasse
                        };
                       
                        var map = L.map('map', {center: [48.709111, 1.375194], zoom: 15, layers: [outdoor, pic]});
                        
                        L.control.layers(baseMaps, overlayMaps).addTo(map);

                        var popup = L.popup();

                        function onMapClick(e) {
                            popup
                                .setLatLng(e.latlng)
                                .setContent("You clicked the map at " + e.latlng.toString())
                                .openOn(map);
                        }

                        map.on('click', onMapClick);

                    </script>
                </div>
                <div class="one third padded">
                    <h3>test PDF layer</h3>
                </div>
{% endblock  %}

