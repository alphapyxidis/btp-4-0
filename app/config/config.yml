imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    translator: ~
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    globals:
        mapbox_token: '%mapbox_token%'
        ga_tracking_id: '%ga_tracking_id%'
        addthis_pubid: '%addthis_pubid%'
        geonames_user: '%geonames_user%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.project_dir%/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # (optional) it will default to the name set for the mapping
                is_bundle: false

# Doctrine Extensions Configuration
stof_doctrine_extensions:
    default_locale: fr_FR

    # Only used if you activated the Uploadable extension
    # uploadable:
    #     # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
    #     default_file_path:       "%kernel.project_dir%/web/uploads"

    #     # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
    #     mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter

    #     # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
    #     default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
    orm:
        default:
            tree: true
            sluggable: true
            timestampable: true
            blameable: true

knp_paginator:
    page_range: 3                       # number of links showed in the pagination menu (e.g: you have 10 pages, a page_range of 3, on the 5th page you'll see links to page 4, 5, 6)
    default_options:                                 
        page_name: page                 # page query parameter name
        sort_field_name: sort           # sort field query parameter name
        sort_direction_name: direction  # sort direction query parameter name
        distinct: true                  # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name: filterField  # filter field query parameter name
        filter_value_name: filterValue  # filter value query parameter name
    template:                                        
        pagination: 'navigation/groundwork_pagination.html.twig'                                         
        sortable: 'navigation/groundwork_sortable_link.html.twig' # sort link template                                
        filtration: 'navigation/groundwork_filtration.html.twig'  # filters template

knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: 'navigation/groundwork_menu.html.twig'    #KnpMenuBundle::menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: false
    # the renderer to use, list is also available by default
    default_renderer: twig
            
# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    port: '%mailer_port%'
    encryption: '%mailer_encryption%'
    spool: { type: memory }

# FOS user configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_from%"
        sender_name: "%mailer_from%"

# FlySystem Configuration (file system abstraction)
oneup_flysystem:
    adapters:
        chantier_adapter:
            local:
                directory: '%kernel.project_dir%/web/data/uploaded' 

    filesystems:
        chantier_filesystem:
            adapter: chantier_adapter
            visibility: private
            alias: chantier_filesystem

# File uploader Configuration
oneup_uploader:
    orphanage:
        maxage: 86400
        directory: '%kernel.cache_dir%/uploader/orphanage'
    mappings:
        chantier_file:
            frontend: dropzone # or any uploader you use in the frontend
            use_orphanage: false
            storage:
                type: flysystem
                filesystem: chantier_filesystem
httplug:
    clients:
        default:
            factory: 'httplug.factory.curl'
        hwi_special:
            factory: 'httplug.factory.guzzle6'
            config: # You pass here the Guzzle configuration, exactly like before.
                timeout: 10
                verify: false
                max_redirects: 1
                ignore_errors: false

hwi_oauth:
    http:
        client: httplug.client.hwi_special # Then you specify the special service to use.
    firewall_names: [main]
    fosub:
        username_iterations: 30
        # Define in which columns of the fos_user table will be stored
        # the access token of every resource_owner
        properties:
            auth0: auth0_id
    resource_owners:
        auth0:
            type:                oauth2
            class:               'AppBundle\Security\OAuth\Auth0ResourceOwner'
            base_url:            '%auth0_base_url%'
            client_id:           '%auth0_client_id%'
            client_secret:       '%auth0_client_secret%'
            scope: "openid profile"
            options:
                csrf: true
fos_rest:
    routing_loader:
        include_format: false
    view:
        view_response_listener: true
    format_listener:
        rules:
            - { path: '^/api/', priorities: ['json'], fallback_format: 'json' }
            - { path: '^/', priorities: ['html'], fallback_format: 'html' }                        

fos_comment:
    db_driver: orm
    class:
        model:
            comment: AppBundle\Entity\Comment
            thread: AppBundle\Entity\Thread

assetic:
    bundles: [ "FOSCommentBundle" ]